{"version":3,"sources":["webpack:///./content/assets/seen-alpha.png","webpack:///./src/pages/index.js"],"names":["module","exports","SocialLinks","data","map","node","key","url","style","paddingBottom","marginBottom","rhythm","title","color","username","href","Home","localData","icon","posts","allMarkdownRemark","edges","css","flex","src","seen","alt","objectFit","margin","flexGrow","display","alignItems","justifyContent","paddingRight","marginLeft","marginRight","maxWidth","padding","length","frontmatter","fields","slug","boxShadow","to","date","timeToRead","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,0D,kCCA3C,+IAOMC,EAAc,SAAC,GACnB,OADgC,EAAXC,KACTC,KAAI,SAAAC,GAAI,OAClB,mBAAKC,IAAKD,EAAKE,IAAKC,MAAO,CAAEC,cAAe,QAC1C,kBACED,MAAO,CACLE,aAAcC,YAAO,EAAI,KAG1BN,EAAKO,MAAO,IACb,oBACEJ,MAAO,CACLK,MAAO,SAFX,KAKKR,EAAKS,WAGZ,iBAAGC,KAAMV,EAAKE,IAAKC,MAAO,IACvBH,EAAKE,U,mHA6HCS,UAvHF,SAAC,GAAc,IACpBC,EAAY,CAChB,CACEC,KAAM,YACNN,MAAO,SACPL,IAAK,gCACLO,SAAU,cAEZ,CACEI,KAAM,cACNN,MAAO,WACPL,IAAK,qCACLO,SAAU,cAEZ,CACEI,KAAM,WACNN,MAAO,SACPL,IACE,4EACFO,SAAU,iBAGRK,EAtBmB,EAAXhB,KAsBKiB,kBAAkBC,MACrC,OACE,8BACE,YAAC,IAAD,KACE,mBACEC,IAAG,GASH,mBACEd,MAAO,CACLe,KAAM,YAGR,mBACEC,IAAKC,IACLC,IAAK,eACLlB,MAAO,CACLmB,UAAW,QACXC,OAAQ,MAId,mBACEpB,MAAO,CACLe,KAAM,UACNM,SAAU,EACVC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,aAAc,QAGhB,uBACE,uCACA,yDAIN,mBACEzB,MAAO,CACL0B,WAAW,OACXC,YAAY,OACZC,SAAUzB,YAAO,IACjB0B,QAAY1B,YAAO,KAAZ,IAAoBA,YAAO,EAAI,KAGxC,kBACEH,MAAO,CACLsB,QAAS,iBAFb,gBAOA,sBAAKb,EAAUqB,OAAf,UACA,YAACpC,EAAD,CAAaC,KAAMc,IACnB,uBACCE,EAAMf,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNO,EAAQP,EAAKkC,YAAY3B,OAASP,EAAKmC,OAAOC,KACpD,OACE,uBAASnC,IAAKD,EAAKmC,OAAOC,MACxB,0BACE,kBACEjC,MAAO,CACLE,aAAcC,YAAO,EAAI,KAG3B,YAAC,OAAD,CAAMH,MAAO,CAAEkC,UAAU,QAAWC,GAAItC,EAAKmC,OAAOC,MACjD7B,IAGL,yBACGP,EAAKkC,YAAYK,KADpB,MAC6BvC,EAAKwC,WADlC,cAIF,2BACE,iBACEC,wBAAyB,CACvBC,OAAQ1C,EAAKkC,YAAYS,aAAe3C,EAAK4C,gBAOzD,2BASH,IAAMC,EAAS","file":"component---src-pages-index-js-ced6b1a12ce300481c8b.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/seen-alpha-37b59fda6068ce312fbc68020f9287e0.png\";","import React from \"react\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport seen from \"../../content/assets/seen-alpha.png\"\n\nconst SocialLinks = ({ data }) => {\n  return data.map(node => (\n    <div key={node.url} style={{ paddingBottom: \"2em\" }}>\n      <h3\n        style={{\n          marginBottom: rhythm(1 / 4),\n        }}\n      >\n        {node.title}{\" \"}\n        <span\n          style={{\n            color: \"#bbb\",\n          }}\n        >\n          — {node.username}\n        </span>\n      </h3>\n      <a href={node.url} style={{}}>\n        {node.url}\n      </a>\n    </div>\n  ))\n}\n\nconst Home = ({ data }) => {\n  const localData = [\n    {\n      icon: \"fa-github\",\n      title: \"GitHub\",\n      url: \"https://github.com/seendsouza\",\n      username: \"seendsouza\",\n    },\n    {\n      icon: \"fa-linkedin\",\n      title: \"LinkedIn\",\n      url: \"https://linkedin.com/in/seendsouza\",\n      username: \"seendsouza\",\n    },\n    {\n      icon: \"fa-paper\",\n      title: \"Resume\",\n      url:\n        \"https://storage.googleapis.com/seendsouza-bucket-0/sean-dsouza-resume.pdf\",\n      username: \"Sean D'Souza\",\n    },\n  ]\n  const posts = data.allMarkdownRemark.edges\n  return (\n    <>\n      <Layout>\n        <div\n          css={css`\n            width: 90%;\n            display: flex;\n            flex-wrap: wrap;\n            margin-left: auto;\n            margin-right: auto;\n            padding: 4em 0;\n          `}\n        >\n          <div\n            style={{\n              flex: \"1 300px\",\n            }}\n          >\n            <img\n              src={seen}\n              alt={\"Sean D'Souza\"}\n              style={{\n                objectFit: \"cover\",\n                margin: 0,\n              }}\n            />\n          </div>\n          <div\n            style={{\n              flex: \"1 300px\",\n              flexGrow: 1,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              paddingRight: \"4em\",\n            }}\n          >\n            <div>\n              <h1>Hi. I'm Sean.</h1>\n              <h2>I love to create cool stuff.</h2>\n            </div>\n          </div>\n        </div>\n        <div\n          style={{\n            marginLeft: `auto`,\n            marginRight: `auto`,\n            maxWidth: rhythm(24),\n            padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n          }}\n        >\n          <h1\n            style={{\n              display: \"inline-block\",\n            }}\n          >\n            Useful Links\n          </h1>\n          <h4>{localData.length} Links</h4>\n          <SocialLinks data={localData} />\n          <hr />\n          {posts.map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <article key={node.fields.slug}>\n                <header>\n                  <h3\n                    style={{\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                      {title}\n                    </Link>\n                  </h3>\n                  <small>\n                    {node.frontmatter.date} • {node.timeToRead} min read\n                  </small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.description || node.excerpt,\n                    }}\n                  />\n                </section>\n              </article>\n            )\n          })}\n          <hr />\n        </div>\n      </Layout>\n    </>\n  )\n}\n\nexport default Home\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}