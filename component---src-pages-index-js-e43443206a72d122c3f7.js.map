{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["SocialLinks","data","map","node","key","url","style","paddingBottom","marginBottom","rhythm","title","color","username","href","Home","localData","icon","posts","allMarkdownRemark","edges","display","length","frontmatter","fields","slug","boxShadow","to","date","timeToRead","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"2FAAA,+GAKMA,EAAc,SAAC,GACnB,OADgC,EAAXC,KACTC,KAAI,SAAAC,GAAI,OAClB,mBAAKC,IAAKD,EAAKE,IAAKC,MAAO,CAAEC,cAAe,QAC1C,kBACED,MAAO,CACLE,aAAcC,YAAO,EAAI,KAG1BN,EAAKO,MAAO,IACb,oBACEJ,MAAO,CACLK,MAAO,SAFX,KAKKR,EAAKS,WAGZ,iBAAGC,KAAMV,EAAKE,IAAKC,MAAO,IACvBH,EAAKE,UA6ECS,UAvEF,SAAC,GAAc,IACpBC,EAAY,CAChB,CACEC,KAAM,YACNN,MAAO,SACPL,IAAK,gCACLO,SAAU,cAEZ,CACEI,KAAM,cACNN,MAAO,WACPL,IAAK,qCACLO,SAAU,cAEZ,CACEI,KAAM,WACNN,MAAO,SACPL,IACE,4EACFO,SAAU,iBAGRK,EAtBmB,EAAXhB,KAsBKiB,kBAAkBC,MACrC,OACE,YAAC,IAAD,KACE,uBACE,kBACEb,MAAO,CACLc,QAAS,iBAFb,2BAOA,sBAAKL,EAAUM,OAAf,UACA,YAACrB,EAAD,CAAaC,KAAMc,IACnB,uBACCE,EAAMf,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNO,EAAQP,EAAKmB,YAAYZ,OAASP,EAAKoB,OAAOC,KACpD,OACE,uBAASpB,IAAKD,EAAKoB,OAAOC,MACxB,0BACE,kBACElB,MAAO,CACLE,aAAcC,YAAO,EAAI,KAG3B,YAAC,OAAD,CAAMH,MAAO,CAAEmB,UAAU,QAAWC,GAAIvB,EAAKoB,OAAOC,MACjDd,IAGL,yBACGP,EAAKmB,YAAYK,KADpB,MAC6BxB,EAAKyB,WADlC,cAIF,2BACE,iBACEC,wBAAyB,CACvBC,OAAQ3B,EAAKmB,YAAYS,aAAe5B,EAAK6B,gBAOzD,uBACA,iDAQD,IAAMC,EAAS","file":"component---src-pages-index-js-e43443206a72d122c3f7.js","sourcesContent":["import React from \"react\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport { Link, graphql } from \"gatsby\"\n\nconst SocialLinks = ({ data }) => {\n  return data.map(node => (\n    <div key={node.url} style={{ paddingBottom: \"2em\" }}>\n      <h3\n        style={{\n          marginBottom: rhythm(1 / 4),\n        }}\n      >\n        {node.title}{\" \"}\n        <span\n          style={{\n            color: \"#bbb\",\n          }}\n        >\n          — {node.username}\n        </span>\n      </h3>\n      <a href={node.url} style={{}}>\n        {node.url}\n      </a>\n    </div>\n  ))\n}\n\nconst Home = ({ data }) => {\n  const localData = [\n    {\n      icon: \"fa-github\",\n      title: \"GitHub\",\n      url: \"https://github.com/seendsouza\",\n      username: \"seendsouza\",\n    },\n    {\n      icon: \"fa-linkedin\",\n      title: \"LinkedIn\",\n      url: \"https://linkedin.com/in/seendsouza\",\n      username: \"seendsouza\",\n    },\n    {\n      icon: \"fa-paper\",\n      title: \"Resume\",\n      url:\n        \"https://storage.googleapis.com/seendsouza-bucket-0/sean-dsouza-resume.pdf\",\n      username: \"Sean D'Souza\",\n    },\n  ]\n  const posts = data.allMarkdownRemark.edges\n  return (\n    <Layout>\n      <div>\n        <h1\n          style={{\n            display: \"inline-block\",\n          }}\n        >\n          Site Under Construction\n        </h1>\n        <h4>{localData.length} Links</h4>\n        <SocialLinks data={localData} />\n        <hr />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>\n                  {node.frontmatter.date} • {node.timeToRead} min read\n                </small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          )\n        })}\n        <hr />\n        <p>Site made with Gatsby</p>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Home\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}