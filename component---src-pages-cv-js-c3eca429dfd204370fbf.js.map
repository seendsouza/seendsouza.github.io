{"version":3,"sources":["webpack:///./src/components/tag.js","webpack:///./src/components/experience.js","webpack:///./src/pages/cv.js","webpack:///./content/cv/resume.yaml"],"names":["Experience","name","css","rhythm","topLeftContent","topRightContent","bottomLeftContent","bottomRightContent","listItems","tags","key","map","listItem","tag","CV","mapMonthToNum","month","monthArr","Date","getMonth","idx","indexOf","Error","datesToString","dates","deltaMonths","end","year","start","substring","style","marginLeft","marginRight","maxWidth","padding","resume","activities","description","educations","education","degree","gpa","institution","relevantCourseWork","join","skills","languages","language","technologies","technology","experiences","experience","title","company","jobType","location","projects","project","module","exports"],"mappings":"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","file":"component---src-pages-cv-js-c3eca429dfd204370fbf.js","sourcesContent":["import React from \"react\"\nimport { rhythm } from \"../utils/typography\"\nimport { css } from \"@emotion/core\"\n\nexport default function Experience({ name }) {\n  return (\n    <label\n      css={css`\n        padding: ${rhythm(1 / 8)} ${rhythm(1 / 2)};\n\n        margin-left: ${rhythm(1 / 4)};\n        margin-right: ${rhythm(1 / 4)};\n        margin-top: ${rhythm(1 / 4)};\n        margin-bottom: ${rhythm(1 / 4)};\n\n        border-width: ${rhythm(1 / 16)};\n        border-radius: ${rhythm(1)};\n        border-color: var(--text-primary);\n        border-style: solid;\n        font-size: ${rhythm(1 / 2)};\n      `}\n    >\n      {name}\n    </label>\n  )\n}\n","import React from \"react\"\nimport { rhythm } from \"../utils/typography\"\nimport Tag from \"./tag\"\nimport { css } from \"@emotion/core\"\n\nexport default function Experience({\n  topLeftContent,\n  topRightContent,\n  bottomLeftContent,\n  bottomRightContent,\n  listItems,\n  tags,\n}) {\n  return (\n    <div\n      key={\n        topLeftContent +\n        topRightContent +\n        bottomLeftContent +\n        bottomRightContent\n      }\n      css={css`\n        margin-left: auto;\n        margin-right: auto;\n        margin-bottom: ${rhythm(1)};\n        border-style: solid;\n        border-radius: ${rhythm(1 / 2)};\n        padding: ${rhythm(1 / 2)};\n      `}\n    >\n      <div>\n        <div\n          css={css`\n            display: flex;\n            justify-content: space-between;\n          `}\n        >\n          <h4>{topLeftContent}</h4>\n          <h5>{topRightContent}</h5>\n        </div>\n        {bottomLeftContent && bottomRightContent && (\n          <div\n            css={css`\n              display: flex;\n              justify-content: space-between;\n            `}\n          >\n            <h5>{bottomLeftContent}</h5>\n            <h5>{bottomRightContent}</h5>\n          </div>\n        )}\n      </div>\n      {listItems.map(listItem => {\n        return (\n          <div\n            key={listItem}\n            css={css`\n              margin-bottom: ${rhythm(1 / 2)};\n            `}\n          >\n            â€¢ {listItem}{\" \"}\n          </div>\n        )\n      })}\n      <div\n        css={css`\n          display: flex;\n          flex-wrap: wrap;\n        `}\n      >\n        {tags.map(tag => {\n          return <Tag name={tag} key={tag} />\n        })}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport Experience from \"../components/experience\"\nimport { css } from \"@emotion/core\"\nimport resume from \"../../content/cv/resume.yaml\"\n\nconst CV = () => {\n  const mapMonthToNum = month => {\n    const monthArr = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ]\n\n    if (month === \"Present\") {\n      const d = new Date()\n      return mapMonthToNum(monthArr[d.getMonth()])\n    }\n    const idx = monthArr.indexOf(month)\n    if (idx >= 0) {\n      return idx\n    } else {\n      throw new Error(`Invalid month ${month}`)\n    }\n  }\n\n  const datesToString = dates => {\n    const deltaMonths =\n      12 * dates.end.year +\n      mapMonthToNum(dates.end.month) -\n      (12 * dates.start.year + mapMonthToNum(dates.start.month)) +\n      1\n    return `${dates.start.month.substring(0, 3)} ${dates.start.year} - ${\n      dates.end.month === \"Present\"\n        ? \"Present\"\n        : dates.end.month.substring(0, 3)\n    } ${\n      dates.end.month === \"Present\" ? \"\" : dates.end.year\n    } (${deltaMonths} months)`\n  }\n\n  return (\n    <Layout>\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <h1\n          css={css`\n            display: inline-block;\n          `}\n        >\n          Sean D'Souza | CV\n        </h1>\n        <h3\n          css={css`\n            padding-top: ${rhythm(1 / 2)};\n            margin-bottom: ${rhythm(3 / 4)};\n          `}\n        >\n          Quick Facts\n        </h3>\n        <div\n          css={css`\n            border-style: solid;\n            border-radius: ${rhythm(1 / 2)};\n            padding: ${rhythm(1 / 2)};\n            margin-bottom: ${rhythm(1)};\n          `}\n        >\n          {resume.activities.map(description => {\n            return (\n              <div\n                key={description}\n                css={css`\n                  margin-bottom: ${rhythm(1 / 2)};\n                `}\n              >\n                â€¢ {description}{\" \"}\n              </div>\n            )\n          })}\n        </div>\n        <h3\n          css={css`\n            margin-bottom: ${rhythm(3 / 4)};\n            padding-top: ${rhythm(1 / 2)};\n          `}\n        >\n          Education\n        </h3>\n\n        <div\n          css={css`\n            border-style: solid;\n            border-radius: ${rhythm(1 / 2)};\n            padding: ${rhythm(1 / 2)};\n            margin-bottom: ${rhythm(1)};\n          `}\n        >\n          {resume.educations.map(education => {\n            const {\n              degree,\n              gpa,\n              institution,\n              dates,\n              relevantCourseWork,\n            } = education\n            return (\n              <div key={education.institution}>\n                <div\n                  css={css`\n                    margin-bottom: ${rhythm(1 / 2)};\n                  `}\n                >\n                  â€¢{\" \"}\n                  {degree +\n                    \" @ \" +\n                    institution +\n                    \" (\" +\n                    datesToString(dates) +\n                    \")\"}{\" \"}\n                </div>\n                <div\n                  css={css`\n                    margin-bottom: ${rhythm(1 / 2)};\n                  `}\n                >\n                  â€¢ {\"GPA: \" + gpa}\n                </div>\n                <div\n                  css={css`\n                    margin-bottom: ${rhythm(1 / 2)};\n                  `}\n                >\n                  â€¢ {\"Relevant Coursework: \" + relevantCourseWork.join(\", \")}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        <h3\n          css={css`\n            margin-bottom: ${rhythm(1 / 4)};\n            margin-bottom: ${rhythm(3 / 4)};\n            padding-top: ${rhythm(1 / 2)};\n          `}\n        >\n          Skills\n        </h3>\n        <div\n          css={css`\n            border-style: solid;\n            border-radius: ${rhythm(1 / 2)};\n            padding: ${rhythm(1 / 2)};\n            margin-bottom: ${rhythm(1)};\n          `}\n        >\n          {resume.skills.languages.map(language => {\n            return (\n              <div\n                key={language}\n                css={css`\n                  margin-bottom: ${rhythm(1 / 2)};\n                `}\n              >\n                â€¢ {language}{\" \"}\n              </div>\n            )\n          })}\n        </div>\n\n        <div\n          css={css`\n            border-style: solid;\n            border-radius: ${rhythm(1 / 2)};\n            padding: ${rhythm(1 / 2)};\n            margin-bottom: ${rhythm(1)};\n          `}\n        >\n          {resume.skills.technologies.map(technology => {\n            return (\n              <div\n                key={technology}\n                css={css`\n                  margin-bottom: ${rhythm(1 / 2)};\n                `}\n              >\n                â€¢ {technology}{\" \"}\n              </div>\n            )\n          })}\n        </div>\n        <h3\n          css={css`\n            padding-top: ${rhythm(1 / 2)};\n            margin-bottom: ${rhythm(3 / 4)};\n          `}\n        >\n          Experience\n        </h3>\n        {resume.experiences.map(experience => {\n          return (\n            <Experience\n              key={experience.title + experience.company}\n              topLeftContent={experience.title}\n              topRightContent={datesToString(experience.dates)}\n              bottomLeftContent={\n                experience.company +\n                (experience.jobType === \"\" ? \"\" : ` (${experience.jobType})`)\n              }\n              bottomRightContent={experience.location}\n              listItems={experience.description}\n              tags={experience.skills}\n            />\n          )\n        })}\n\n        <h3\n          css={css`\n            margin-bottom: ${rhythm(3 / 4)};\n            padding-top: ${rhythm(1 / 2)};\n          `}\n        >\n          Projects\n        </h3>\n        {resume.projects.map(project => {\n          return (\n            <Experience\n              key={project.name}\n              topLeftContent={project.name}\n              topRightContent={datesToString(project.dates)}\n              listItems={project.description}\n              tags={project.skills}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nexport default CV\n","module.exports = {\"educations\":[{\"degree\":\"BASc in Software Engineering\",\"institution\":\"University of Ottawa\",\"gpa\":\"9.05/10\",\"location\":\"Ottawa, Ontario\",\"dates\":{\"start\":{\"month\":\"September\",\"year\":2019},\"end\":{\"month\":\"December\",\"year\":2023}},\"relevantCourseWork\":[\"Python\",\"Java\",\"Software Engineering\",\"Computer Architecture\",\"Data Structure and Algorithms\",\"Operating Systems\",\"UIs\",\"Databases\"]}],\"skills\":{\"languages\":[\"Python\",\"JavaScript\",\"TypeScript\",\"HTML\",\"CSS\",\"C++\",\"Java\",\"Clojure\",\"Go\",\"Rust\",\"Solidity\"],\"technologies\":[\"React\",\"Redux\",\"Web Components\",\"WebDriverIO\",\"Node.js + Express\",\"Flask\",\"MongoDB\",\"Docker\",\"Kubernetes\",\"Android\",\"Linux\"]},\"experiences\":[{\"title\":\"Full Stack Developer Co-Op\",\"company\":\"reNFT\",\"jobType\":\"Co-Op\",\"location\":\"Remote\",\"dates\":{\"start\":{\"month\":\"September\",\"year\":2021},\"end\":{\"month\":\"December\",\"year\":2021}},\"description\":[],\"skills\":[\"JavaScript\",\"React\",\"ethers\",\"The Graph\",\"GraphQL\"]},{\"title\":\"Cloud + Analytics Developer, Co-Op+Intern\",\"company\":\"Ericsson (Cloud RAN)\",\"jobType\":\"Co-Op+Internship\",\"location\":\"Ottawa, Ontario (remote)\",\"dates\":{\"start\":{\"month\":\"January\",\"year\":2021},\"end\":{\"month\":\"September\",\"year\":2021}},\"description\":[\"Architecting and implementing an online metrics anomaly detection system\",\"Building a system that visualizes PM data, logs, microservice versions and test results from >50 test clusters with specialized hardware\",\"Switched message interchange format to Protocol Buffers in C for IPC communication in shared memory radio manager\",\"Evaluated various full stack observability and root cause analysis solutions for pre-canary characteristic testing environment\"],\"skills\":[\"Python\",\"Go\",\"Java\",\"JavaScript\",\"C\",\"Kubernetes\",\"Helm\",\"Docker\",\"Jenkins\",\"Prometheus\",\"InfluxDB\",\"MongoDB\",\"Elasticsearch\"]},{\"title\":\"Frontend Developer, Co-Op\",\"company\":\"Ericsson (CENX)\",\"jobType\":\"Co-Op\",\"location\":\"Ottawa, Ontario (remote)\",\"dates\":{\"start\":{\"month\":\"May\",\"year\":2020},\"end\":{\"month\":\"August\",\"year\":2020}},\"description\":[\"Delivered a Proof of Concept (PoC) and release of a new UI that configures the telecom network monitoring application at runtime as a team of 5\",\"Wrote a design doc detailing all the shareable components in the new UI that increased testability, readability and consistency\",\"Acted as scrum master by creating epics and stories for the productization of the new UI pertaining to RBAC, SSO, DevOps and technical debt\",\"Made presentations about Micro Frontends, and PM+FM collectors from ONAP, Prometheus, OpenStack, telegraf, SNMP\"],\"skills\":[\"JavaScript\",\"Python\",\"ClojureScript\",\"Web Components\",\"WebDriverIO\",\"Locust\",\"Docker\",\"Kubernetes\",\"GitLab Pipelines\"]},{\"title\":\"Full Stack Developer, Freelance\",\"company\":\"Susblob Customs\",\"jobType\":\"Freelance\",\"location\":\"Remote\",\"dates\":{\"start\":{\"month\":\"November\",\"year\":2019},\"end\":{\"month\":\"May\",\"year\":2021}},\"description\":[\"Designed and developed a full stack e-commerce platform from the ground up (MERN Stack)\",\"Implemented PayPal Express Checkout, Stripe Checkout, inventory management, orders and shopping cart using an Express REST API\",\"Tune core web vitals to achieve scores of >90 in performance, accessibility, best practices and SEO\"],\"skills\":[\"TypeScript\",\"JavaScript\",\"HTML\",\"CSS\",\"React\",\"Redux\",\"Node.js\",\"Express\",\"MongoDB\",\"NGINX\",\"Docker\",\"Kubernetes\"]},{\"title\":\"Junior Software Developer, Co-Op\",\"company\":\"CENX\",\"jobType\":\"Co-Op\",\"location\":\"Ottawa, Ontario\",\"dates\":{\"start\":{\"month\":\"July\",\"year\":2018},\"end\":{\"month\":\"August\",\"year\":2018}},\"description\":[\"Extended a CLI program written in Python that summarizes gigabytes of FunkLoad test data from XML logs by improving runtime by over 200%\",\"Created a graphing program in Python and AWK that visualizes daily system logs (SAR) using NumPy and Pandas used when assessing performance\",\"Refactored, fixed and restored an HTTP and WebSockets integration test that proved the existence of unresponsive endpoints in the product\"],\"skills\":[\"Python\",\"AWK\",\"NumPy\",\"pandas\",\"WebSockets\",\"Solr\",\"Docker\"]}],\"projects\":[{\"name\":\"Decentralized Mahjong\",\"moduleName\":\"github.com/fensandemajiang/fensandemajiang\",\"link\":\"https://github.com/fensandemajiang/fensandemajiang\",\"skills\":[\"React\",\"Ceramic (IDX, 3ID)\",\"ThreadDB\",\"WebRTC\",\"IPFS\"],\"dates\":{\"start\":{\"month\":\"August\",\"year\":2021},\"end\":{\"month\":\"Present\",\"year\":2021}},\"description\":[\"Creating a Mahjong platform that runs decentralized (IDX identity management, P2P player communication, IPFS game logs)\"]},{\"name\":\"openvtuber\",\"moduleName\":\"github.com/virtuber/openvtuber\",\"link\":\"https://github.com/virtuber/openvtuber\",\"skills\":[\"Python\",\"TypeScript\",\"React\",\"Three.js\",\"GLTF + VRM\",\"PyTorch\",\"dlib\",\"Caffe\"],\"dates\":{\"start\":{\"month\":\"December\",\"year\":2020},\"end\":{\"month\":\"May\",\"year\":2021}},\"description\":[\"Leading a team of 6 to create software that controls a virtual character from your own movements with just camera data\"]},{\"name\":\"VEX Robot (Team 2381C)\",\"moduleName\":\"gitlab.com/2381-robotics/2381C-V2\",\"link\":\"https://gitlab.com/2381-robotics/2381C-V2\",\"skills\":[\"C++\",\"Python\",\"RTOS\"],\"dates\":{\"start\":{\"month\":\"November\",\"year\":2018},\"end\":{\"month\":\"February\",\"year\":2019}},\"description\":[\"Engineered an autonomous program using motion profiling, PID feedback control and driver control in C++, Python and the PROS library\",\"Won Excellence, Innovate, Service and Tournament Champions awards at various regional competitions\"]}],\"activities\":[\"Substitute Teaching Assistant (TA) for Trilogy Education/2U Inc. at Carleton University for Full Stack Flex Bootcamp (June 2020)\",\"Mentor for and speaker at SETHacks; participant at 6 hackathons including HackFS, Hack the North and Hack the 6ix\",\"Mentor and software advisor for world-class high school VEX robotics organization 2381 Kernel Bye consisting of 3 teams\"]}"],"sourceRoot":""}