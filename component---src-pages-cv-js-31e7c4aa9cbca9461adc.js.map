{"version":3,"file":"component---src-pages-cv-js-31e7c4aa9cbca9461adc.js","mappings":"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","sources":["webpack://seendsouza.github.io/./src/components/tag.js","webpack://seendsouza.github.io/./src/components/experience.js","webpack://seendsouza.github.io/./src/pages/cv.js"],"sourcesContent":["import React from \"react\"\nimport { rhythm } from \"../utils/typography\"\nimport { css } from \"@emotion/react\"\n\nexport default function Experience({ name }) {\n  return (\n    <label\n      css={css`\n        padding: ${rhythm(1 / 8)} ${rhythm(1 / 2)};\n\n        margin-left: ${rhythm(1 / 4)};\n        margin-right: ${rhythm(1 / 4)};\n        margin-top: ${rhythm(1 / 4)};\n        margin-bottom: ${rhythm(1 / 4)};\n\n        border-width: ${rhythm(1 / 16)};\n        border-radius: ${rhythm(1)};\n        border-color: var(--text-primary);\n        border-style: solid;\n        font-size: ${rhythm(1 / 2)};\n      `}\n    >\n      {name}\n    </label>\n  )\n}\n","import React from \"react\"\nimport { rhythm } from \"../utils/typography\"\nimport Tag from \"./tag\"\nimport { css } from \"@emotion/react\"\n\nexport default function Experience({\n  topLeftContent,\n  topRightContent,\n  bottomLeftContent,\n  bottomRightContent,\n  listItems,\n  tags,\n}) {\n  return (\n    <div\n      key={\n        topLeftContent +\n        topRightContent +\n        bottomLeftContent +\n        bottomRightContent\n      }\n      css={css`\n        margin-left: auto;\n        margin-right: auto;\n        margin-bottom: ${rhythm(1)};\n        border-style: solid;\n        border-radius: ${rhythm(1 / 2)};\n        padding: ${rhythm(1 / 2)};\n      `}\n    >\n      <div>\n        <div\n          css={css`\n            display: flex;\n            justify-content: space-between;\n          `}\n        >\n          <h4>{topLeftContent}</h4>\n          <h5>{topRightContent}</h5>\n        </div>\n        {bottomLeftContent && bottomRightContent && (\n          <div\n            css={css`\n              display: flex;\n              justify-content: space-between;\n            `}\n          >\n            <h5>{bottomLeftContent}</h5>\n            <h5>{bottomRightContent}</h5>\n          </div>\n        )}\n      </div>\n      {listItems.map(listItem => {\n        return (\n          <div\n            key={listItem}\n            css={css`\n              margin-bottom: ${rhythm(1 / 2)};\n            `}\n          >\n            • {listItem}{\" \"}\n          </div>\n        )\n      })}\n      <div\n        css={css`\n          display: flex;\n          flex-wrap: wrap;\n        `}\n      >\n        {tags.map(tag => {\n          return <Tag name={tag} key={tag} />\n        })}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport Experience from \"../components/experience\"\nimport { css } from \"@emotion/react\"\nimport resume from \"../../content/cv/resume.yaml\"\n\nconst CV = () => {\n  const mapMonthToNum = month => {\n    const monthArr = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ]\n\n    if (month === \"Present\") {\n      const d = new Date()\n      return mapMonthToNum(monthArr[d.getMonth()])\n    }\n    const idx = monthArr.indexOf(month)\n    if (idx >= 0) {\n      return idx\n    } else {\n      throw new Error(`Invalid month ${month}`)\n    }\n  }\n\n  const datesToString = dates => {\n    const deltaMonths =\n      12 * dates.end.year +\n      mapMonthToNum(dates.end.month) -\n      (12 * dates.start.year + mapMonthToNum(dates.start.month)) +\n      1\n    return `${dates.start.month.substring(0, 3)} ${dates.start.year} - ${\n      dates.end.month === \"Present\"\n        ? \"Present\"\n        : dates.end.month.substring(0, 3)\n    } ${\n      dates.end.month === \"Present\" ? \"\" : dates.end.year\n    } (${deltaMonths} months)`\n  }\n\n  return (\n    <Layout>\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <h1\n          css={css`\n            display: inline-block;\n          `}\n        >\n          Sean D'Souza | CV\n        </h1>\n        <h3\n          css={css`\n            padding-top: ${rhythm(1 / 2)};\n            margin-bottom: ${rhythm(3 / 4)};\n          `}\n        >\n          Quick Facts\n        </h3>\n        <div\n          css={css`\n            border-style: solid;\n            border-radius: ${rhythm(1 / 2)};\n            padding: ${rhythm(1 / 2)};\n            margin-bottom: ${rhythm(1)};\n          `}\n        >\n          {resume.activities.map(description => {\n            return (\n              <div\n                key={description}\n                css={css`\n                  margin-bottom: ${rhythm(1 / 2)};\n                `}\n              >\n                • {description}{\" \"}\n              </div>\n            )\n          })}\n        </div>\n        <h3\n          css={css`\n            margin-bottom: ${rhythm(3 / 4)};\n            padding-top: ${rhythm(1 / 2)};\n          `}\n        >\n          Education\n        </h3>\n\n        <div\n          css={css`\n            border-style: solid;\n            border-radius: ${rhythm(1 / 2)};\n            padding: ${rhythm(1 / 2)};\n            margin-bottom: ${rhythm(1)};\n          `}\n        >\n          {resume.educations.map(education => {\n            const { degree, gpa, institution, dates, relevantCourseWork } =\n              education\n            return (\n              <div key={education.institution}>\n                <div\n                  css={css`\n                    margin-bottom: ${rhythm(1 / 2)};\n                  `}\n                >\n                  •{\" \"}\n                  {degree +\n                    \" @ \" +\n                    institution +\n                    \" (\" +\n                    datesToString(dates) +\n                    \")\"}{\" \"}\n                </div>\n                <div\n                  css={css`\n                    margin-bottom: ${rhythm(1 / 2)};\n                  `}\n                >\n                  • {\"GPA: \" + gpa}\n                </div>\n                <div\n                  css={css`\n                    margin-bottom: ${rhythm(1 / 2)};\n                  `}\n                >\n                  • {\"Relevant Coursework: \" + relevantCourseWork.join(\", \")}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        <h3\n          css={css`\n            margin-bottom: ${rhythm(1 / 4)};\n            margin-bottom: ${rhythm(3 / 4)};\n            padding-top: ${rhythm(1 / 2)};\n          `}\n        >\n          Skills\n        </h3>\n        <div\n          css={css`\n            border-style: solid;\n            border-radius: ${rhythm(1 / 2)};\n            padding: ${rhythm(1 / 2)};\n            margin-bottom: ${rhythm(1)};\n          `}\n        >\n          {resume.skills.languages.map(language => {\n            return (\n              <div\n                key={language}\n                css={css`\n                  margin-bottom: ${rhythm(1 / 2)};\n                `}\n              >\n                • {language}{\" \"}\n              </div>\n            )\n          })}\n        </div>\n\n        <div\n          css={css`\n            border-style: solid;\n            border-radius: ${rhythm(1 / 2)};\n            padding: ${rhythm(1 / 2)};\n            margin-bottom: ${rhythm(1)};\n          `}\n        >\n          {resume.skills.technologies.map(technology => {\n            return (\n              <div\n                key={technology}\n                css={css`\n                  margin-bottom: ${rhythm(1 / 2)};\n                `}\n              >\n                • {technology}{\" \"}\n              </div>\n            )\n          })}\n        </div>\n        <h3\n          css={css`\n            padding-top: ${rhythm(1 / 2)};\n            margin-bottom: ${rhythm(3 / 4)};\n          `}\n        >\n          Experience\n        </h3>\n        {resume.experiences.map(experience => {\n          return (\n            <Experience\n              key={experience.title + experience.company}\n              topLeftContent={experience.title}\n              topRightContent={datesToString(experience.dates)}\n              bottomLeftContent={\n                experience.company +\n                (experience.jobType === \"\" ? \"\" : ` (${experience.jobType})`)\n              }\n              bottomRightContent={experience.location}\n              listItems={experience.description.points}\n              tags={experience.skills.skills}\n            />\n          )\n        })}\n\n        <h3\n          css={css`\n            margin-bottom: ${rhythm(3 / 4)};\n            padding-top: ${rhythm(1 / 2)};\n          `}\n        >\n          Projects\n        </h3>\n        {resume.projects.map(project => {\n          return (\n            <Experience\n              key={project.name}\n              topLeftContent={project.name}\n              topRightContent={datesToString(project.dates)}\n              listItems={project.description}\n              tags={project.skills}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nexport default CV\n"],"names":["Experience","_ref","name","___EmotionJSX","css","rhythm","styles","_ref2","_ref3","_ref4","topLeftContent","topRightContent","bottomLeftContent","bottomRightContent","listItems","tags","key","map","listItem","tag","Tag","CV","mapMonthToNum","month","monthArr","d","Date","getMonth","idx","indexOf","Error","datesToString","dates","deltaMonths","end","year","start","substring","Layout","style","marginLeft","marginRight","maxWidth","padding","resume","description","education","degree","gpa","institution","relevantCourseWork","join","language","technology","experience","title","company","jobType","location","points","skills","project"],"sourceRoot":""}